import React, {useEffect, useRef, useState} from 'react';
import styles from './CreateLiber.module.css';
import { krijoLiber } from '../../server/server';

const CreateLiber = () => {

  const [message, setMessage] = useState('');
  const [messageColor, setMessageColor] = useState('');

  const autori = useRef(null);
  const bookId = useRef(null);
  const kategoria = useRef(null);
  const rafti = useRef(null);
  const rreshti = useRef(null);
  const statusLibriOne = useRef(null);
  const stocku = useRef(null);
  const titulli = useRef(null);

  let statusLibri = true;

  useEffect(() => {
    
  }, [message, messageColor])
  

  const handleCommentSubmission = () => {
    if (statusLibriOne.current.value === "aktiv") {
      statusLibri = true;
    } else {
      statusLibri = false;
    }

    let lowercaseTitle = titulli.current.value.toLowerCase();
    var newStr = lowercaseTitle.replace(/ /g, "-");
    let lowercaseAuthor = autori.current.value.toLowerCase();
    var anotherStr = lowercaseAuthor.replace(/ /g, "-");

    let combinetslug = `${newStr}-${anotherStr}`;
    console.log(combinetslug)

    const bookObj = {
      autori: autori.current.value,
      bookId: parseInt(bookId.current.value),
      kategoria: kategoria.current.value,
      rafti: rafti.current.value,
      rreshti: parseInt(rreshti.current.value),
      slug: combinetslug,
      statusLibri: statusLibri,
      stocku: parseInt(stocku.current.value),
      titulli: titulli.current.value,
    };

    krijoLiber(bookObj).then((result)=>{
      console.log(result);
      if(result.status){
        setMessage(result.message);
        setMessageColor('#30b337');
      }else{
        setMessage(result.message);
        setMessageColor('#b33430');
      }
    });

    autori.current.value = "";
    bookId.current.value = "";
    kategoria.current.value = "";
    rafti.current.value = "";
    rreshti.current.value = "";
    statusLibriOne.current.value = "aktiv";
    stocku.current.value = "";
    titulli.current.value = "";

    setTimeout(() => {
        setMessage('');
        setMessageColor('');
    }, "3000")

  };

  return (
    <div>
      <head>
        <title>Xtreme Starter Next Js App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </head>
      <div>
        <p className={styles.title}>Krijo nje liber</p>
        <p style={{color: messageColor}}>{message}</p>
        <input
          ref={titulli}
          className={styles.input}
          type="text"
          placeholder="Titulli i librit"
        />
        <input ref={rafti} className={styles.input} type="text" placeholder="Rafti" />
        <input
          ref={rreshti}
          className={styles.input}
          type="text"
          placeholder="Rreshti"
        />
        <input
          ref={kategoria}
          className={styles.input}
          type="text"
          placeholder="Kategoria"
        />
        <input
          ref={bookId}
          className={styles.input}
          type="text"
          placeholder="ID e librit"
        />
        <label className={styles.label} htmlFor="status">
          Statusi
        </label>
        <select ref={statusLibriOne} className={styles.select} name="status" id="">
          <option value="aktiv">aktiv</option>
          <option value="i huazuar">i huazuar</option>
        </select>
        <input
          ref={autori}
          className={styles.input}
          type="text"
          placeholder="Autori"
        />
        <input ref={stocku} className={styles.input} type="text" placeholder="Stoku" />
        <div onClick={handleCommentSubmission} className={styles.btn}>
          Krijo
        </div>
      </div>
    </div>
  )
}

export default CreateLiber;